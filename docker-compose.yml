version: '3.8'

services:

  zookeeper:
    container_name: zookeeper
    restart: always
    image: wurstmeister/zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.13-2.8.1
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "test-kafka-topic:1:1"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=1099"
      JMX_PORT: 1099
    ports:
      - 9092:9092
      - 29092:29092
      - 1099:1099
    depends_on:
      - zookeeper

  schemaregistry:
    container_name: schemaregistry
    image: confluentinc/cp-schema-registry:7.3.0
    restart: always
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:9092"
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: FULL
    ports:
      - 8081:8081

  kafka-connect:
    container_name: kafka-connect
    build:
      context: ./connectors/
    depends_on:
      - kafka
      - zookeeper
      - schemaregistry
    ports:
      - 8083:8083
    environment:
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/opt/connectors"
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_GROUP_ID: connect-cluster
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schemaregistry:8081"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE": "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE": "true"

  kafka-connect-jobs:
    container_name: kafka-connect-jobs
    build: ./jobs/
    environment:
      environment: local
      KAFKA_CONNECT_URL: "http://kafka-connect:8083"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      SCHEMA_REGISTRY_URL: "http://schemaregistry:8081"
    depends_on:
      - kafka-connect

  kafka-connect-ui:
    container_name: kafka-connect-ui
    image: landoop/kafka-connect-ui
    environment:
      - CONNECT_URL=http://kafka-connect:8083
    ports:
      - 8000:8000

  kafka-ui:
    container_name: kafka-ui
    image: obsidiandynamics/kafdrop
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
      - CMD_ARGS=--schemaregistry.connect=http://schemaregistry:8081 --message.format=AVRO
    depends_on:
      - kafka
      - schemaregistry
    ports:
      - 9000:9000

  mock-server:
    container_name: mock-server
    build: mock-server
    ports:
      - 8084:8084